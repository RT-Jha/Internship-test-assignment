use std::io;

fn kth_smallest(nums: &[i32], k: usize) -> Option<i32> {
    if k > nums.len() {
        return None;
    }

    let mut sorted_nums = nums.to_vec();
    sorted_nums.sort();

    Some(sorted_nums[k - 1])
}

fn main() {
    println!("Enter a list of integers separated by spaces:");
    
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    
    let nums: Vec<i32> = input
        .trim()
        .split_whitespace()
        .map(|s| s.parse().expect("Invalid input"))
        .collect();
    
    println!("Enter the value of k:");
    input.clear();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let k: usize = input.trim().parse().expect("Invalid input");

    match kth_smallest(&nums, k) {
        Some(smallest) => println!("The {}th smallest element is: {}", k, smallest),
        None => println!("Invalid value of k."),
    }
}
